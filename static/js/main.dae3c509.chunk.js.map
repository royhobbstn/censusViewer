{"version":3,"sources":["Worker/cache_worker.js","Config/datatree.js","Config/computed_breaks.js","Config/configuration.js","Component/MainMenu.js","Service/calc_expressions.js","Config/state_lookup.js","Service/utility.js","Worker/handle_moe_fetch.js","Redux/actions.js","Service/data_to_styles.js","Worker/handle_est_fetch.js","Redux/thunks.js","Component/MainMenuContainer.js","Component/mapbox_api_key.js","Config/style.js","Service/calc_tile_precache.js","Service/load_mouse_events.js","Component/Map.js","Service/load_map_layers.js","Component/MapContainer.js","Component/ZoomMessage.js","Component/ZoomMessageContainer.js","Component/Info.js","Component/InfoContainer.js","Redux/reducer.js","Redux/combine_reducers.js","index.js","Worker/fetch_worker.js"],"names":["code","self","onmessage","e","requests","data","map","url","options","method","headers","Headers","mode","request","Request","fetch","Promise","all","then","cached","toString","substring","indexOf","lastIndexOf","blob","Blob","type","worker_script","URL","createObjectURL","module","exports","acs1014","require","acs1115","acs1216","datatree","breaks","configuration","datasets","id","year","label","geography","state","sumlev","county","place","tract","bg","tiles","startup","source_geography","source_dataset","selected_attr","zoom","geo_options","Object","keys","key","value","data_options","MainMenu","handleGeographyChange","handleDatasetChange","handleThemeChange","sections","forEach","item","element","section","push","sorted_section_theme_keys","sort","style","position","top","left","zIndex","width","borderRadius","Menu","attached","Dropdown","icon","text","simple","basic","dataset","Item","onClick","geo","Icon","name","className","theme","textAlign","margin","verbose","states","state_lookup","formatNumber","num","attr","mininc","big_mult","parseInt","toLocaleString","console","log","datasetToYear","myMoeWorker","Worker","m","store","dispatch","clusters","colortree","myEstWorker","layer_add","thunkClearWorkers","geoid","getState","postMessage","thunkUpdateClusters","pole","current_zoom","current_bounds","getSumlevFromGeography","pole_list","pt","point","lng","lat","pt_buffer","buffer","units","some","p","test_pt","booleanWithin","cluster_done_list","LZ","compressToEncodedURIComponent","JSON","stringify","moe_cluster_done_list","expression","encodeURIComponent","numerator_raw","numerator","denominator_raw","denominator","index","length","getExpressionFromAttr","bounds","root","busy_data","busyData","moe_expression","numerator_moe","denominator_moe","getMoeExpressionFromAttr","moe_url","busy_moe","values","components","favstyle","split","classify","break_count","colorscheme","color_info","break_values","p_stops","ifnull","ifzero","arr_length","color","brval","colors","getStopColor","convertDataToStops","unique_geoids","stops","drawn_stops","new_layer_name","window","addLayer","filter","property","layer_name","MainMenuContainer","connect","selectedOption","long2tile","lon","Math","floor","pow","lat2tile","tan","PI","cos","myCacheWorker","cache_worker","loadMouseEvents","getCurrentData","addToRequested","updateClusters","updateMouseover","updateZoomMessage","findNew","center","getZoom","screenX","originalEvent","x","screenY","y","unproject","getCenter","getBounds","filtered_tiles_to_get","tiles_already_requested","pole_lat","pole_lng","current_sw","_sw","current_ne","_ne","lat_span","abs","lng_span","pct_along_lat","pct_along_lng","bounds_obj","new_zoom","zoom_difference","new_lat_span","new_lng_span","new_sw_lat","new_ne_lat","new_sw_lng","new_ne_lng","msg","tiles_to_get","sw_lat","sw_lng","ne_lat","ne_lng","lat_tile_1","lat_tile_2","temp","long_tile_1","long_tile_2","i","j","tile_url","includes","calcTileCache","on","throttle","features","getCanvas","cursor","properties","GEOID","slice","getLabel","NAME","Map","props","mapboxgl","accessToken","container","maxZoom","minZoom","addSource","setPaintProperty","event","nextProps","nextState","this","clearActiveLayers","mouseover_statistic","mouseover_label","mouseover_moe","Component","MapContainer","active_layer_names","thunkChangeMouseover","urls","addToTilesAlreadyRequested","removeLayer","layer","removeSource","fire","actionUpdateZoomMessage","bottom","padding","height","fontSize","ZoomMessage","map_zoom","ZoomMessageContainer","Info","right","backgroundColor","marginBottom","InfoContainer","default_state","undefined","action","assign","Array","from","Set","Store","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","render","Fragment","document","getElementById","persistent_data","res","json","fetched_data","catch","err","error"],"mappings":"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","file":"static/js/main.dae3c509.chunk.js","sourcesContent":["/* eslint-env worker */\n/* eslint no-restricted-globals: \"off\" */\n/* global */\n\n// cache_worker.js\nconst workercode = () => {\n\n  self.onmessage = function(e) {\n\n    const requests = e.data.map(url => {\n\n      var headers = new Headers({ 'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate, br' });\n      var options = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n      };\n\n      var request = new Request(url);\n\n      return fetch(request, options);\n\n    });\n\n    Promise.all(requests).then((cached) => {\n      // console.log('request batch done: ' + cached.length);\n    });\n\n  };\n};\n\nlet code = workercode.toString();\ncode = code.substring(code.indexOf(\"{\") + 1, code.lastIndexOf(\"}\"));\n\nconst blob = new Blob([code], { type: \"application/javascript\" });\nconst worker_script = URL.createObjectURL(blob);\n\nmodule.exports = worker_script;\n","//\n\nconst acs1014 = require('./acs1014_tree.json');\nconst acs1115 = require('./acs1115_tree.json');\nconst acs1216 = require('./acs1216_tree.json');\n\nexports.datatree = {\n  acs1014,\n  acs1115,\n  acs1216\n};\n","//\n\nconst acs1014 = require('./breaks_acs1014.json');\nconst acs1115 = require('./breaks_acs1115.json');\nconst acs1216 = require('./breaks_acs1216.json');\n\nexports.breaks = {\n  acs1014,\n  acs1115,\n  acs1216\n};\n","export const configuration = {\n  datasets: {\n    acs1014: {\n      id: 'acs1014',\n      year: '2014',\n      label: 'ACS 2010 to 2014'\n    },\n    acs1115: {\n      id: 'acs1115',\n      year: '2015',\n      label: 'ACS 2011 to 2015'\n    },\n    acs1216: {\n      id: 'acs1216',\n      year: '2016',\n      label: 'ACS 2012 to 2016'\n    }\n  },\n  geography: {\n    state: {\n      id: 'state',\n      sumlev: '040',\n      label: 'State'\n    },\n    county: {\n      id: 'county',\n      sumlev: '050',\n      label: 'County'\n    },\n    place: {\n      id: 'place',\n      sumlev: '160',\n      label: 'Place'\n    },\n    tract: {\n      id: 'tract',\n      sumlev: '140',\n      label: 'Tract'\n    },\n    bg: {\n      id: 'bg',\n      sumlev: '150',\n      label: 'Block Group'\n    }\n  },\n  tiles: ['d3q67u30tir1mv.cloudfront.net', 'd1rz82ekhmlc7r.cloudfront.net', 'd31llbwjzirnw2.cloudfront.net'],\n  startup: {\n    source_geography: 'tract',\n    source_dataset: 'acs1014',\n    selected_attr: 'mhv',\n    zoom: 7\n  }\n\n};\n","import React from 'react';\nimport { Dropdown, Icon, Menu } from 'semantic-ui-react';\nimport { configuration } from '../Config/configuration.js';\nimport { datatree } from '../Config/datatree.js';\n\n\nconst geo_options = Object.keys(configuration.geography).map(key => {\n  return { value: configuration.geography[key].id, label: configuration.geography[key].label };\n});\n\nconst data_options = Object.keys(configuration.datasets).map(key => {\n  return { value: configuration.datasets[key].id, label: configuration.datasets[key].label };\n});\n\nconst MainMenu = ({ handleGeographyChange, handleDatasetChange, handleThemeChange, source_dataset, source_geography, selected_attr }) => {\n\n\n  const sections = {};\n\n  Object.keys(datatree[source_dataset]).forEach(key => {\n    const item = datatree[source_dataset][key];\n    const element = { value: key, label: datatree[source_dataset][key]['verbose'] };\n    if (!sections[item.section]) {\n      sections[item.section] = [element];\n    }\n    else {\n      sections[item.section].push(element);\n    }\n  });\n\n  const sorted_section_theme_keys = Object.keys(sections).sort();\n\n  return (\n    <div style={{position: 'absolute', top: '0', left: '0', zIndex: '1000', width: '100%', borderRadius: '0'}}>\n    <Menu attached='top'>\n    \n    {/**\n      <Dropdown item icon='wrench' simple>\n        <Dropdown.Menu>\n          <Dropdown.Item>\n            <Icon name='dropdown' />\n            <span className='text'>Theme</span>\n\n          </Dropdown.Item>\n\n        </Dropdown.Menu>\n      </Dropdown>\n      **/}\n      \n      \n            <Dropdown icon={null} item text='Dataset' simple basic>\n\n            <Dropdown.Menu>\n            {data_options.map(dataset=> {\n              return <Dropdown.Item \n              onClick={()=> {\n                handleDatasetChange(dataset);\n              }}\n              key={dataset.value}>{dataset.label}</Dropdown.Item>;\n            })}\n            </Dropdown.Menu>\n\n  </Dropdown>\n\n      <Dropdown icon={null}  item text='Geography' simple>\n\n            <Dropdown.Menu>\n            {geo_options.map(geo=> {\n              return <Dropdown.Item \n              onClick={()=> {\n                handleGeographyChange(geo);\n              }}\n              key={geo.value}>{geo.label}</Dropdown.Item>;\n            })}\n            </Dropdown.Menu>\n\n  </Dropdown>\n  \n        <Dropdown icon={null}  item text='Theme' simple>\n    <Dropdown.Menu>\n       {sorted_section_theme_keys.map(section=> {\n              return <Dropdown.Item key={section}>\n            <Icon name='dropdown' />\n            <span className='text'>{section}</span>\n\n            <Dropdown.Menu>\n            {sections[section].map(theme=> {\n              return <Dropdown.Item \n              onClick={()=> {\n                handleThemeChange(theme);\n              }}\n              key={theme.value}>{theme.label}</Dropdown.Item>;\n            })}\n            </Dropdown.Menu>\n            \n            </Dropdown.Item>;\n            })}\n    </Dropdown.Menu>\n  </Dropdown>\n      \n      <span style={{textAlign: 'center', width: '100%', margin: 'auto'}}>{configuration.datasets[source_dataset].label} - {configuration.geography[source_geography].label} - {datatree[source_dataset][selected_attr].verbose}</span>\n\n\n    </Menu>\n\n\n  </div>\n  );\n};\n\nexport default MainMenu;\n","//\n\nconst { datatree } = require('../Config/datatree.js');\n\n\n//\n\n\nexport function getExpressionFromAttr(dataset, attr) {\n  const numerator_raw = datatree[dataset][attr].numerator;\n  const denominator_raw = datatree[dataset][attr].denominator;\n\n  const numerator = [];\n  numerator_raw.forEach((item, index) => {\n    numerator.push(item);\n    if (index !== numerator_raw.length - 1) { numerator.push(\"+\"); }\n  });\n\n  const denominator = [];\n  denominator_raw.forEach((item, index) => {\n    denominator.push(item);\n    if (index !== denominator_raw.length - 1) { denominator.push(\"+\"); }\n  });\n  if (!denominator.length) {\n    denominator.push(\"1\");\n  }\n\n  return [\"(\", ...numerator, \")\", \"/\", \"(\", ...denominator, \")\"];\n}\n\nexport function getMoeExpressionFromAttr(dataset, attr) {\n  // TODO this needs to be validated\n\n  const numerator_raw = datatree[dataset][attr].numerator;\n  const denominator_raw = datatree[dataset][attr].denominator;\n\n  // escape hatch.  todo, re-examine moe calculation\n  if (numerator_raw.length === 1 && denominator_raw.length === 0) {\n    return [numerator_raw[0] + '_moe'];\n  }\n\n  const numerator = [];\n  numerator_raw.forEach((item, index) => {\n    numerator.push(item);\n    if (index !== numerator_raw.length - 1) { numerator.push(\"+\"); }\n  });\n\n  const denominator = [];\n  denominator_raw.forEach((item, index) => {\n    denominator.push(item);\n    if (index !== denominator_raw.length - 1) { denominator.push(\"+\"); }\n  });\n  if (!denominator.length) {\n    denominator.push(\"1\");\n  }\n\n  const numerator_moe = [\"sqrt\", \"(\"];\n  numerator_raw.forEach((item, index) => {\n    numerator_moe.push(\"(\");\n    numerator_moe.push(item + '_moe');\n    numerator_moe.push(\"^\");\n    numerator_moe.push(\"2\");\n    numerator_moe.push(\")\");\n    if (index !== numerator_raw.length - 1) { numerator_moe.push(\"+\"); }\n  });\n  numerator_moe.push(\")\");\n\n  const denominator_moe = [\"sqrt\", \"(\"];\n  denominator_raw.forEach((item, index) => {\n    denominator_moe.push(\"(\");\n    denominator_moe.push(item + '_moe');\n    denominator_moe.push(\"^\");\n    denominator_moe.push(\"2\");\n    denominator_moe.push(\")\");\n    if (index !== denominator_raw.length - 1) { denominator_moe.push(\"+\"); }\n  });\n  if (!denominator_raw.length) {\n    denominator_moe.push(\"1\");\n  }\n  denominator_moe.push(\")\");\n\n  console.log([\"(\", \"sqrt\", \"(\", \"(\", \"(\", ...numerator_moe, \")\", \"^\", \"2\", \")\", \"-\", \"(\", \"(\", \"(\", \"(\", ...numerator, \")\", \"/\", \"(\", ...denominator, \")\", \")\", \"^\", \"2\", \")\", \"*\", \"(\", \"(\", ...denominator_moe, \")\", \"^\", \"2\", \")\", \")\", \")\", \")\", \"/\", \"(\", ...denominator, \")\"]);\n\n  return [\"(\", \"sqrt\", \"(\", \"(\", \"(\", ...numerator_moe, \")\", \"^\", \"2\", \")\", \"-\", \"(\", \"(\", \"(\", \"(\", ...numerator, \")\", \"/\", \"(\", ...denominator, \")\", \")\", \"^\", \"2\", \")\", \"*\", \"(\", \"(\", ...denominator_moe, \")\", \"^\", \"2\", \")\", \")\", \")\", \")\", \"/\", \"(\", ...denominator, \")\"];\n}\n","const states = {};\nstates['01'] = \"Alabama\";\nstates['02'] = \"Alaska\";\nstates['04'] = \"Arizona\";\nstates['05'] = \"Arkansas\";\nstates['06'] = \"California\";\nstates['08'] = \"Colorado\";\nstates['09'] = \"Connecticut\";\nstates['10'] = \"Delaware\";\nstates['11'] = \"District Of Columbia\";\nstates['12'] = \"Florida\";\nstates['13'] = \"Georgia\";\nstates['15'] = \"Hawaii\";\nstates['16'] = \"Idaho\";\nstates['17'] = \"Illinois\";\nstates['18'] = \"Indiana\";\nstates['19'] = \"Iowa\";\nstates['20'] = \"Kansas\";\nstates['21'] = \"Kentucky\";\nstates['22'] = \"Louisiana\";\nstates['23'] = \"Maine\";\nstates['24'] = \"Maryland\";\nstates['25'] = \"Massachusetts\";\nstates['26'] = \"Michigan\";\nstates['27'] = \"Minnesota\";\nstates['28'] = \"Mississippi\";\nstates['29'] = \"Missouri\";\nstates['30'] = \"Montana\";\nstates['31'] = \"Nebraska\";\nstates['32'] = \"Nevada\";\nstates['33'] = \"New Hampshire\";\nstates['34'] = \"New Jersey\";\nstates['35'] = \"New Mexico\";\nstates['36'] = \"New York\";\nstates['37'] = \"North Carolina\";\nstates['38'] = \"North Dakota\";\nstates['39'] = \"Ohio\";\nstates['40'] = \"Oklahoma\";\nstates['41'] = \"Oregon\";\nstates['42'] = \"Pennsylvania\";\nstates['72'] = \"Puerto Rico\";\nstates['44'] = \"Rhode Island\";\nstates['45'] = \"South Carolina\";\nstates['46'] = \"South Dakota\";\nstates['47'] = \"Tennessee\";\nstates['48'] = \"Texas\";\nstates['49'] = \"Utah\";\nstates['50'] = \"Vermont\";\nstates['51'] = \"Virginia\";\nstates['53'] = \"Washington\";\nstates['54'] = \"West Virginia\";\nstates['55'] = \"Wisconsin\";\nstates['56'] = \"Wyoming\";\n\n\nexport const state_lookup = states;\n","//\n\nimport { state_lookup } from '../Config/state_lookup.js';\nimport { configuration } from '../Config/configuration.js';\n\nconst { datatree } = require('../Config/datatree.js');\n\n\nexport function getSumlevFromGeography(geography) {\n  switch (geography) {\n    case 'county':\n      return '050';\n    case 'state':\n      return '040';\n    case 'tract':\n      return '140';\n    case 'bg':\n      return '150';\n    case 'place':\n      return '160';\n    default:\n      return '000';\n  }\n}\n\nexport function getLabel(geoid, name) {\n\n  switch (geoid.length) {\n    case 12:\n      // block group: 081230025011\n      return `BG ${geoid.slice(-1)}, Tract ${geoid.slice(-7,-1)}, ${state_lookup[geoid.slice(0,2)]}`;\n    case 11:\n      // tract: 08005007703\n      return `Tract ${geoid.slice(-6)}, ${state_lookup[geoid.slice(0,2)]}`;\n    case 7:\n      // place\n      return `${name}, ${state_lookup[geoid.slice(0,2)]}`;\n    case 5:\n      // county\n      return `${name} County, ${state_lookup[geoid.slice(0,2)]}`;\n    case 2:\n      // state\n      return name;\n    default:\n      return '';\n  }\n\n}\n\nexport function formatNumber(num, dataset, attr) {\n\n  const configuration = datatree[dataset][attr];\n  const mininc = configuration.mininc;\n\n  let big_mult = 0;\n\n\n  if (mininc === \"1\") {\n    // round to integer\n    big_mult = 1;\n  }\n  else if (mininc === \"0.1\") {\n    // round to tenths\n    big_mult = 10;\n  }\n  else if (mininc === \"0.01\") {\n    // round to hundredths\n    big_mult = 100;\n  }\n  else if (mininc === \"0.001\") {\n    // round to thousandths\n    big_mult = 1000;\n  }\n\n\n  if (configuration.type === 'currency') {\n    return `$ ${parseInt(num, 10).toLocaleString()}`;\n  }\n  else if (configuration.type === 'regular') {\n    return num;\n  }\n  else if (configuration.type === 'percent') {\n    return `${parseInt(num*100*big_mult, 10)/big_mult} %`;\n  }\n  else {\n    console.log('unknown number type ' + configuration.type);\n    return num;\n  }\n}\n\n\nexport function datasetToYear(dataset) {\n  return configuration.datasets[dataset].year;\n}\n","//\nimport { store } from '../index.js';\n\nimport {\n  updateMoeData,\n  unbusyMoe,\n  changeMouseoverMoe\n}\nfrom '../Redux/actions.js';\n\nimport worker_script from '../Worker/fetch_worker.js';\n\nexport const myMoeWorker = new Worker(worker_script);\n\n\n\n\nmyMoeWorker.onmessage = (m) => {\n\n  if (!m || !m.data) {\n    store.dispatch(unbusyMoe());\n  }\n  else {\n    if (m.data.type === 'fetch') {\n      store.dispatch(updateMoeData(m.data.data.clusters));\n    }\n    else if (m.data.type === 'lookup') {\n      store.dispatch(changeMouseoverMoe(m.data.data));\n    }\n  }\n};\n","//\n\nexport function updateDataset(dataset) {\n  return {\n    type: 'UPDATE_DATASET',\n    dataset\n  };\n}\n\nexport function updateGeography(geography) {\n  return {\n    type: 'UPDATE_GEOGRAPHY',\n    geography\n  };\n}\n\nexport function updateTheme(theme) {\n  return {\n    type: 'UPDATE_THEME',\n    theme\n  };\n}\n\n\n//\n\nexport function updateMoeData(clusters) {\n  return {\n    type: 'UPDATE_MOE_DATA',\n    clusters\n  };\n}\n\nexport function updateStyleData(clusters, layer_name) {\n  return {\n    type: 'UPDATE_POLYGON_STYLE',\n    clusters,\n    layer_name\n  };\n}\n\nexport function changeMouseoverStatistic(data) {\n  return {\n    type: 'UPDATE_MOUSEOVER_STATISTIC',\n    data\n  };\n}\n\nexport function changeMouseoverInfo(data) {\n  return {\n    type: 'UPDATE_MOUSEOVER_INFO',\n    data\n  };\n}\n\nexport function changeMouseoverMoe(data) {\n  return {\n    type: 'UPDATE_MOUSEOVER_MOE',\n    data\n  };\n}\n\nexport function busyData(pole) {\n  return {\n    type: 'BUSY_DATA',\n    pole\n  };\n}\n\nexport function busyMoe() {\n  return {\n    type: 'BUSY_MOE'\n  };\n}\n\nexport function unbusyData() {\n  return {\n    type: 'UNBUSY_DATA'\n  };\n}\n\nexport function unbusyMoe() {\n  return {\n    type: 'UNBUSY_MOE'\n  };\n}\n\nexport function addToTilesAlreadyRequested(urls) {\n  return {\n    type: 'ADD_TO_REQUESTED_TILES_LIST',\n    urls\n  };\n}\n\nexport function clearActiveLayerNames() {\n  return {\n    type: 'CLEAR_ACTIVE_LAYER_NAMES'\n  };\n}\n\nexport function actionUpdateZoomMessage(zoom) {\n  return {\n    type: 'UPDATE_ZOOM_MESSAGE',\n    zoom\n  };\n}\n","//\n\n\n\nconst { datatree } = require('../Config/datatree.js');\nconst { breaks } = require('../Config/computed_breaks.js');\nconst colortree = require('../Config/colortree.json');\n\n//\n\nexport function convertDataToStops(data, attr, source_dataset, sumlev) {\n  //\n\n  const theme_info = datatree[source_dataset][attr];\n\n  // TODO temporarily set everything to favstyle\n  // in future this logic moved to when selecting a new theme\n  // and logic here will just grab existing style info from \n\n  const favstyle = theme_info.favstyle;\n\n  const components = favstyle.split(',');\n\n  const classify = components[0];\n  const break_count = components[1];\n  const colorscheme = components[2];\n\n\n  const color_info = colortree[`${colorscheme}_${break_count}`];\n\n  const break_values = breaks[source_dataset][attr][sumlev][`${classify}${break_count}`];\n\n  const p_stops = {};\n  Object.keys(data).forEach(key => {\n    p_stops[key] = getStopColor(data[key], color_info, break_values);\n  });\n  return p_stops;\n}\n\nfunction getStopColor(value, color_info, break_values) {\n  //\n  if (!value && value !== 0) {\n    // null, undefined, NaN\n    return color_info.ifnull;\n  }\n  else if (value === 0) {\n    // zero value\n    return color_info.ifzero;\n  }\n\n  const arr_length = break_values.length;\n  let color = 'black';\n\n  break_values.forEach((brval, index) => {\n    if (index === 0 && value < brval) {\n      // less than first value in breaks array\n      color = color_info.colors[index];\n    }\n    else if ((index === (arr_length - 1)) && value >= brval) {\n      // greater than last item in breaks array\n      color = color_info.colors[index + 1];\n    }\n    else if (value >= brval && value < break_values[index + 1]) {\n      // between two break values\n      color = color_info.colors[index + 1];\n    }\n  });\n\n  return color;\n\n}\n","//\nimport { store } from '../index.js';\n\nimport {\n  unbusyData,\n  updateStyleData,\n  changeMouseoverStatistic\n}\nfrom '../Redux/actions.js';\n\nimport { convertDataToStops } from '../Service/data_to_styles.js';\n\nimport worker_script from '../Worker/fetch_worker.js';\nexport const myEstWorker = new Worker(worker_script);\n\n\n// give a unique increment id number to each new layer created\nlet layer_add = 0;\n\n\nmyEstWorker.onmessage = (m) => {\n\n  if (!m || !m.data) {\n    store.dispatch(unbusyData());\n  }\n  else {\n\n    if (m.data.type === 'fetch') {\n\n      layer_add++;\n\n      // Future lift this (single-line) calc to the worker.  \n      // not practical with es6 commonjs interopability currently\n      const values = convertDataToStops(m.data.data.data, m.data.attr, m.data.source_dataset, m.data.sumlev);\n\n      const unique_geoids = Object.keys(values);\n\n      const stops = unique_geoids.map(key => {\n        return [key, values[key]];\n      });\n\n      // to avoid 'must have stops' errors\n      const drawn_stops = (stops.length) ? stops : [\n        [\"0\", 'blue']\n      ];\n\n      const new_layer_name = `tiles-polygons-${layer_add}`;\n\n      window.map.addLayer({\n        'id': new_layer_name,\n        'type': 'fill',\n        'source': 'tiles',\n        'source-layer': 'main',\n        filter: ['in', 'GEOID', ...unique_geoids],\n        'paint': {\n          'fill-antialias': false,\n          'fill-opacity': 0.6,\n          'fill-color': {\n            property: 'GEOID',\n            type: 'categorical',\n            stops: drawn_stops\n          }\n        }\n      }, \"blank\");\n\n      window.map.addLayer({\n        'id': new_layer_name + '_line',\n        'type': 'line',\n        'source': 'tiles',\n        'source-layer': 'main',\n        filter: ['in', 'GEOID', ...unique_geoids],\n        'paint': {\n          'line-opacity': 0.8,\n          'line-width': 0.5,\n          'line-offset': 0.25,\n          'line-color': {\n            property: 'GEOID',\n            type: 'categorical',\n            stops: drawn_stops\n          }\n        }\n      }, \"blank\");\n\n      store.dispatch(updateStyleData(m.data.data.clusters, new_layer_name));\n\n    }\n    else if (m.data.type === 'lookup') {\n      store.dispatch(changeMouseoverStatistic(m.data.data));\n    }\n  }\n\n};\n","\nimport { point } from '@turf/helpers';\nimport buffer from '@turf/buffer';\nimport booleanWithin from '@turf/boolean-within';\n\nimport {\n  busyData,\n  busyMoe,\n  changeMouseoverInfo,\n  clearActiveLayerNames\n}\nfrom './actions.js';\n\nimport LZ from 'lz-string';\n\nimport { configuration } from '../Config/configuration.js';\n\n\nimport {\n  getMoeExpressionFromAttr,\n  getExpressionFromAttr\n}\nfrom '../Service/calc_expressions.js';\n\nimport { getSumlevFromGeography } from '../Service/utility.js';\n\nimport { myMoeWorker } from '../Worker/handle_moe_fetch.js';\nimport { myEstWorker } from '../Worker/handle_est_fetch.js';\n\n\nexport function thunkClearWorkers(geoid, name) {\n  return (dispatch, getState) => {\n    myEstWorker.postMessage({ type: 'clear', data: {} });\n    myMoeWorker.postMessage({ type: 'clear', data: {} });\n  };\n}\n\nexport function thunkChangeMouseover(geoid, name) {\n  return (dispatch, getState) => {\n    myEstWorker.postMessage({ type: 'lookup', data: geoid });\n    myMoeWorker.postMessage({ type: 'lookup', data: geoid });\n    dispatch(changeMouseoverInfo(name));\n  };\n}\n\nexport function thunkRemoveLayers() {\n  return (dispatch, getState) => {\n\n    const state = getState();\n    const source_geography = state.map.source_geography;\n    const source_dataset = state.map.source_dataset;\n    const active_layer_names = state.map.active_layer_names;\n\n    const year = configuration.datasets[source_dataset].year;\n\n    window.map.removeLayer('tiles-polygons');\n\n    active_layer_names.forEach(layer => {\n      window.map.removeLayer(layer);\n      window.map.removeLayer(layer + '_line');\n    });\n\n    dispatch(clearActiveLayerNames());\n\n    window.map.removeSource('tiles');\n\n    window.map.addSource('tiles', {\n      \"type\": \"vector\",\n      \"minzoom\": 3,\n      \"maxzoom\": 9,\n      \"tiles\": [`https://${configuration.tiles[0]}/${source_geography}_${year}/{z}/{x}/{y}.pbf`, `https://${configuration.tiles[1]}/${source_geography}_${year}/{z}/{x}/{y}.pbf`, `https://${configuration.tiles[2]}/${source_geography}_${year}/{z}/{x}/{y}.pbf`]\n    });\n\n    // layer is re-added because source changed\n    window.map.addLayer({\n      'id': 'tiles-polygons',\n      'type': 'fill',\n      'source': 'tiles',\n      'source-layer': 'main',\n    }, \"background\");\n\n\n    // initiate redraw of map tiles\n    window.map.fire('redraw');\n  };\n}\n\n\nexport function thunkUpdateClusters(pole, current_zoom, current_bounds) {\n  return (dispatch, getState) => {\n\n    const state = getState();\n\n    const source_dataset = state.map.source_dataset;\n    const sumlev = getSumlevFromGeography(state.map.source_geography);\n    const attr = state.map.selected_attr;\n    const pole_list = state.map.pole_list;\n\n\n    // determine if it is a new pole - start with 1 mile and adjust as needed\n    const pt = point([pole.lng, pole.lat]);\n    const pt_buffer = buffer(pt, 1, { units: 'miles' });\n\n    const already_processed_pole = pole_list.some(p => {\n      const test_pt = point([p.lng, p.lat]);\n      return booleanWithin(test_pt, pt_buffer);\n    });\n\n    if (already_processed_pole) {\n      return;\n    }\n\n    // need to keep track of clusters already retrieved on client and send that information to lambda\n    // lambda will figure out clusters to get\n    const cluster_done_list = LZ.compressToEncodedURIComponent(JSON.stringify(state.map.cluster_done_list));\n    const moe_cluster_done_list = LZ.compressToEncodedURIComponent(JSON.stringify(state.map.moe_cluster_done_list));\n\n    const expression = encodeURIComponent(JSON.stringify(getExpressionFromAttr(source_dataset, attr)));\n    const bounds = encodeURIComponent(JSON.stringify(current_bounds));\n\n    const root = 'https://34suzrhb22.execute-api.us-west-2.amazonaws.com/dev/retrieve?';\n    const url = `${root}theme=${attr}&expression=${expression}&dataset=${source_dataset}&sumlev=${sumlev}&pole_lat=${pole.lat}&pole_lng=${pole.lng}&current_zoom=${current_zoom}&current_bounds=${bounds}&cluster_done_list=${cluster_done_list}`;\n\n    if (!state.map.busy_data) {\n      dispatch(busyData({ lng: pole.lng, lat: pole.lat }));\n      myEstWorker.postMessage({ type: 'fetch', url: url, attr, source_dataset, sumlev });\n    }\n\n    const moe_expression = encodeURIComponent(JSON.stringify(getMoeExpressionFromAttr(source_dataset, attr)));\n    const moe_url = `${root}theme=${attr}&expression=${moe_expression}&dataset=${source_dataset}&sumlev=${sumlev}&pole_lat=${pole.lat}&pole_lng=${pole.lng}&current_zoom=${current_zoom}&current_bounds=${bounds}&cluster_done_list=${moe_cluster_done_list}&moe=true`;\n\n    if (!state.map.busy_moe) {\n      dispatch(busyMoe());\n      myMoeWorker.postMessage({ type: 'fetch', url: moe_url });\n    }\n\n  };\n}\n","// this is a container component\n\nimport { connect } from 'react-redux';\nimport MainMenu from './MainMenu.js';\n\n\nimport { thunkClearWorkers } from '../Redux/thunks.js';\nimport { updateDataset, updateGeography, updateTheme } from '../Redux/actions.js';\n\nconst mapStateToProps = state => {\n  return {\n    source_dataset: state.map.source_dataset,\n    selected_attr: state.map.selected_attr,\n    source_geography: state.map.source_geography\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleDatasetChange: selectedOption => {\n      dispatch(thunkClearWorkers());\n      dispatch(updateDataset(selectedOption.value));\n    },\n    handleGeographyChange: selectedOption => {\n      dispatch(thunkClearWorkers());\n      dispatch(updateGeography(selectedOption.value));\n    },\n    handleThemeChange: selectedOption => {\n      dispatch(thunkClearWorkers());\n      dispatch(updateTheme(selectedOption.value));\n    }\n  };\n};\n\nconst MainMenuContainer = connect(mapStateToProps, mapDispatchToProps)(MainMenu);\n\nexport default MainMenuContainer;\n","//\n\nexport const key = \"pk.eyJ1IjoibWFwdXRvcGlhIiwiYSI6ImNqYXZlbmZrYTA4YWQzM3M3MXk2ODZpNWkifQ.fAXuq4zQWA3BIo1_hJUIBw\";\n","export const style = {\n  \"version\": 8,\n  \"name\": \"Bright\",\n  \"metadata\": {\n    \"mapbox:autocomposite\": true,\n    \"mapbox:type\": \"template\",\n    \"mapbox:groups\": {\n\n      \"1444849382550.77\": {\n        \"name\": \"Water\",\n        \"collapsed\": true\n      },\n      \"1444849345966.4436\": {\n        \"name\": \"Roads\",\n        \"collapsed\": true\n      },\n      \"1444849307123.581\": {\n        \"name\": \"Admin  lines\",\n        \"collapsed\": true\n      },\n      \"1456163609504.0715\": {\n        \"name\": \"Road labels\",\n        \"collapsed\": true\n      },\n      \"1444849272561.29\": {\n        \"name\": \"Place labels\",\n        \"collapsed\": true\n      },\n      \"1444849290021.1838\": {\n        \"name\": \"Road labels\",\n        \"collapsed\": true\n      }\n    }\n  },\n  \"sources\": {\n    \"mapbox\": {\n      \"url\": \"mapbox://mapbox.mapbox-streets-v7\",\n      \"type\": \"vector\"\n    }\n  },\n  \"sprite\": \"mapbox://sprites/mapbox/bright-v9\",\n  \"glyphs\": \"mapbox://fonts/mapbox/{fontstack}/{range}.pbf\",\n  \"layers\": [{\n      \"id\": \"background\",\n      \"type\": \"background\",\n      \"paint\": {\n        \"background-color\": \"#ffffff\"\n      },\n      \"interactive\": true\n    },\n\n    {\n      \"interactive\": true,\n      \"metadata\": {\n        \"mapbox:group\": \"1444849382550.77\"\n      },\n      \"filter\": [\n        \"all\", [\n          \"==\",\n          \"class\",\n          \"no\"\n        ]\n      ],\n      \"type\": \"line\",\n      \"source\": \"mapbox\",\n      \"id\": \"blank\",\n      \"source-layer\": \"waterway\"\n    },\n\n    {\n      \"interactive\": true,\n      \"layout\": {\n        \"line-cap\": \"round\"\n      },\n      \"metadata\": {\n        \"mapbox:group\": \"1444849382550.77\"\n      },\n      \"filter\": [\n        \"all\", [\n          \"!=\",\n          \"class\",\n          \"river\"\n        ],\n        [\n          \"!=\",\n          \"class\",\n          \"stream\"\n        ],\n        [\n          \"!=\",\n          \"class\",\n          \"canal\"\n        ]\n      ],\n      \"type\": \"line\",\n      \"source\": \"mapbox\",\n      \"id\": \"waterway\",\n      \"paint\": {\n        \"line-color\": \"#a0c8f0\",\n        \"line-width\": {\n          \"base\": 1.3,\n          \"stops\": [\n            [\n              13,\n              0.5\n            ],\n            [\n              20,\n              2\n            ]\n          ]\n        }\n      },\n      \"source-layer\": \"waterway\"\n    },\n    {\n      \"interactive\": true,\n      \"layout\": {\n        \"line-cap\": \"round\"\n      },\n      \"metadata\": {\n        \"mapbox:group\": \"1444849382550.77\"\n      },\n      \"filter\": [\n        \"==\",\n        \"class\",\n        \"river\"\n      ],\n      \"type\": \"line\",\n      \"source\": \"mapbox\",\n      \"id\": \"waterway_river\",\n      \"paint\": {\n        \"line-color\": \"#a0c8f0\",\n        \"line-width\": {\n          \"base\": 1.2,\n          \"stops\": [\n            [\n              11,\n              0.5\n            ],\n            [\n              20,\n              6\n            ]\n          ]\n        }\n      },\n      \"source-layer\": \"waterway\"\n    },\n    {\n      \"interactive\": true,\n      \"layout\": {\n        \"line-cap\": \"round\"\n      },\n      \"metadata\": {\n        \"mapbox:group\": \"1444849382550.77\"\n      },\n      \"filter\": [\n        \"in\",\n        \"class\",\n        \"stream\",\n        \"canal\"\n      ],\n      \"type\": \"line\",\n      \"source\": \"mapbox\",\n      \"id\": \"waterway_stream_canal\",\n      \"paint\": {\n        \"line-color\": \"#a0c8f0\",\n        \"line-width\": {\n          \"base\": 1.3,\n          \"stops\": [\n            [\n              13,\n              0.5\n            ],\n            [\n              20,\n              6\n            ]\n          ]\n        }\n      },\n      \"source-layer\": \"waterway\"\n    },\n    {\n      \"id\": \"water\",\n      \"type\": \"fill\",\n      \"source\": \"mapbox\",\n      \"source-layer\": \"water\",\n      \"paint\": {\n        \"fill-outline-color\": \"grey\",\n        \"fill-color\": \"#a0c8f0\"\n      },\n      \"metadata\": {\n        \"mapbox:group\": \"1444849382550.77\"\n      },\n      \"interactive\": true\n    },\n    // {\n    //   \"id\": \"water_offset\",\n    //   \"paint\": {\n    //     \"fill-color\": \"white\",\n    //     \"fill-opacity\": 0.3,\n    //     \"fill-translate\": [\n    //       0,\n    //       2.5\n    //     ]\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849382550.77\"\n    //   },\n    //   \"interactive\": true,\n    //   \"ref\": \"water\"\n    // },\n    {\n      \"id\": \"water_pattern\",\n      \"paint\": {\n        \"fill-translate\": [\n          0,\n          2.5\n        ],\n        \"fill-pattern\": \"wave\"\n      },\n      \"metadata\": {\n        \"mapbox:group\": \"1444849382550.77\"\n      },\n      \"interactive\": true,\n      \"ref\": \"water\"\n    },\n\n\n    // {\n    //   \"interactive\": true,\n    //   \"minzoom\": 12,\n    //   \"layout\": {\n    //     \"line-cap\": \"round\",\n    //     \"line-join\": \"round\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"==\",\n    //       \"class\",\n    //       \"motorway_link\"\n    //     ],\n    //     [\n    //       \"!in\",\n    //       \"structure\",\n    //       \"bridge\",\n    //       \"tunnel\"\n    //     ]\n    //   ],\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_motorway_link_casing\",\n    //   \"paint\": {\n    //     \"line-color\": \"#e9ac77\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           12,\n    //           1\n    //         ],\n    //         [\n    //           13,\n    //           3\n    //         ],\n    //         [\n    //           14,\n    //           4\n    //         ],\n    //         [\n    //           20,\n    //           15\n    //         ]\n    //       ]\n    //     },\n    //     \"line-opacity\": 1\n    //   },\n    //   \"source-layer\": \"road\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"layout\": {\n    //     \"line-cap\": \"round\",\n    //     \"line-join\": \"round\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"in\",\n    //       \"class\",\n    //       \"service\",\n    //       \"track\"\n    //     ],\n    //     [\n    //       \"!in\",\n    //       \"structure\",\n    //       \"bridge\",\n    //       \"tunnel\"\n    //     ]\n    //   ],\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_service_track_casing\",\n    //   \"paint\": {\n    //     \"line-color\": \"#cfcdca\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           15,\n    //           1\n    //         ],\n    //         [\n    //           16,\n    //           4\n    //         ],\n    //         [\n    //           20,\n    //           11\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"source-layer\": \"road\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"minzoom\": 13,\n    //   \"layout\": {\n    //     \"line-cap\": \"round\",\n    //     \"line-join\": \"round\",\n    //     \"visibility\": \"visible\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"==\",\n    //       \"class\",\n    //       \"link\"\n    //     ],\n    //     [\n    //       \"!in\",\n    //       \"structure\",\n    //       \"bridge\",\n    //       \"tunnel\"\n    //     ]\n    //   ],\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_link_casing\",\n    //   \"paint\": {\n    //     \"line-color\": \"#e9ac77\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           12,\n    //           1\n    //         ],\n    //         [\n    //           13,\n    //           3\n    //         ],\n    //         [\n    //           14,\n    //           4\n    //         ],\n    //         [\n    //           20,\n    //           15\n    //         ]\n    //       ]\n    //     },\n    //     \"line-opacity\": 1\n    //   },\n    //   \"source-layer\": \"road\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"layout\": {\n    //     \"line-cap\": \"round\",\n    //     \"line-join\": \"round\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"==\",\n    //       \"$type\",\n    //       \"LineString\"\n    //     ],\n    //     [\n    //       \"all\", [\n    //         \"in\",\n    //         \"class\",\n    //         \"street\",\n    //         \"street_limited\"\n    //       ],\n    //       [\n    //         \"!in\",\n    //         \"structure\",\n    //         \"bridge\",\n    //         \"tunnel\"\n    //       ]\n    //     ]\n    //   ],\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_street_casing\",\n    //   \"paint\": {\n    //     \"line-color\": \"#cfcdca\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           12,\n    //           0.5\n    //         ],\n    //         [\n    //           13,\n    //           1\n    //         ],\n    //         [\n    //           14,\n    //           4\n    //         ],\n    //         [\n    //           20,\n    //           15\n    //         ]\n    //       ]\n    //     },\n    //     \"line-opacity\": {\n    //       \"stops\": [\n    //         [\n    //           12,\n    //           0\n    //         ],\n    //         [\n    //           12.5,\n    //           1\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"source-layer\": \"road\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"layout\": {\n    //     \"line-cap\": \"round\",\n    //     \"line-join\": \"round\",\n    //     \"visibility\": \"visible\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"in\",\n    //       \"class\",\n    //       \"secondary\",\n    //       \"tertiary\"\n    //     ],\n    //     [\n    //       \"!in\",\n    //       \"structure\",\n    //       \"bridge\",\n    //       \"tunnel\"\n    //     ]\n    //   ],\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_secondary_tertiary_casing\",\n    //   \"paint\": {\n    //     \"line-color\": \"#e9ac77\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           8,\n    //           1.5\n    //         ],\n    //         [\n    //           20,\n    //           17\n    //         ]\n    //       ]\n    //     },\n    //     \"line-opacity\": 1\n    //   },\n    //   \"source-layer\": \"road\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"layout\": {\n    //     \"line-cap\": \"round\",\n    //     \"line-join\": \"round\",\n    //     \"visibility\": \"visible\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"in\",\n    //       \"class\",\n    //       \"trunk\",\n    //       \"primary\"\n    //     ],\n    //     [\n    //       \"!in\",\n    //       \"structure\",\n    //       \"bridge\",\n    //       \"tunnel\"\n    //     ]\n    //   ],\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_trunk_primary_casing\",\n    //   \"paint\": {\n    //     \"line-color\": \"#e9ac77\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           5,\n    //           0.4\n    //         ],\n    //         [\n    //           6,\n    //           0.6\n    //         ],\n    //         [\n    //           7,\n    //           1.5\n    //         ],\n    //         [\n    //           20,\n    //           22\n    //         ]\n    //       ]\n    //     },\n    //     \"line-opacity\": 1\n    //   },\n    //   \"source-layer\": \"road\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"minzoom\": 5,\n    //   \"layout\": {\n    //     \"line-cap\": \"round\",\n    //     \"line-join\": \"round\",\n    //     \"visibility\": \"visible\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"==\",\n    //       \"class\",\n    //       \"motorway\"\n    //     ],\n    //     [\n    //       \"!in\",\n    //       \"structure\",\n    //       \"bridge\",\n    //       \"tunnel\"\n    //     ]\n    //   ],\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_motorway_casing\",\n    //   \"paint\": {\n    //     \"line-color\": \"#e9ac77\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           5,\n    //           0.4\n    //         ],\n    //         [\n    //           6,\n    //           0.6\n    //         ],\n    //         [\n    //           7,\n    //           1.5\n    //         ],\n    //         [\n    //           20,\n    //           22\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"source-layer\": \"road\"\n    // },\n    // {\n    //   \"id\": \"road_path_pedestrian\",\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"source-layer\": \"road\",\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"==\",\n    //       \"$type\",\n    //       \"LineString\"\n    //     ],\n    //     [\n    //       \"all\", [\n    //         \"in\",\n    //         \"class\",\n    //         \"path\",\n    //         \"pedestrian\"\n    //       ],\n    //       [\n    //         \"!in\",\n    //         \"structure\",\n    //         \"bridge\",\n    //         \"tunnel\"\n    //       ]\n    //     ]\n    //   ],\n    //   \"paint\": {\n    //     \"line-color\": \"#cba\",\n    //     \"line-dasharray\": [\n    //       1.5,\n    //       0.75\n    //     ],\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           15,\n    //           1.2\n    //         ],\n    //         [\n    //           20,\n    //           4\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"interactive\": true\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"id\": \"road_motorway_link\",\n    //   \"paint\": {\n    //     \"line-color\": \"#fc8\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           12.5,\n    //           0\n    //         ],\n    //         [\n    //           13,\n    //           1.5\n    //         ],\n    //         [\n    //           14,\n    //           2.5\n    //         ],\n    //         [\n    //           20,\n    //           11.5\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"ref\": \"road_motorway_link_casing\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"id\": \"road_service_track\",\n    //   \"paint\": {\n    //     \"line-color\": \"#fff\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           15.5,\n    //           0\n    //         ],\n    //         [\n    //           16,\n    //           2\n    //         ],\n    //         [\n    //           20,\n    //           7.5\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"ref\": \"road_service_track_casing\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"id\": \"road_link\",\n    //   \"paint\": {\n    //     \"line-color\": \"#fea\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           12.5,\n    //           0\n    //         ],\n    //         [\n    //           13,\n    //           1.5\n    //         ],\n    //         [\n    //           14,\n    //           2.5\n    //         ],\n    //         [\n    //           20,\n    //           11.5\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"ref\": \"road_link_casing\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"id\": \"road_street\",\n    //   \"paint\": {\n    //     \"line-color\": \"#fff\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           13.5,\n    //           0\n    //         ],\n    //         [\n    //           14,\n    //           2.5\n    //         ],\n    //         [\n    //           20,\n    //           11.5\n    //         ]\n    //       ]\n    //     },\n    //     \"line-opacity\": 1\n    //   },\n    //   \"ref\": \"road_street_casing\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"id\": \"road_secondary_tertiary\",\n    //   \"paint\": {\n    //     \"line-color\": \"#fea\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           6.5,\n    //           0\n    //         ],\n    //         [\n    //           8,\n    //           0.5\n    //         ],\n    //         [\n    //           20,\n    //           13\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"ref\": \"road_secondary_tertiary_casing\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"id\": \"road_trunk_primary\",\n    //   \"paint\": {\n    //     \"line-color\": \"#fea\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           6.5,\n    //           0\n    //         ],\n    //         [\n    //           7,\n    //           0.5\n    //         ],\n    //         [\n    //           20,\n    //           18\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"ref\": \"road_trunk_primary_casing\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"id\": \"road_motorway\",\n    //   \"paint\": {\n    //     \"line-color\": \"#fc8\",\n    //     \"line-width\": {\n    //       \"base\": 1.2,\n    //       \"stops\": [\n    //         [\n    //           6.5,\n    //           0\n    //         ],\n    //         [\n    //           7,\n    //           0.5\n    //         ],\n    //         [\n    //           20,\n    //           18\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"ref\": \"road_motorway_casing\"\n    // },\n    // {\n    //   \"id\": \"road_major_rail\",\n    //   \"type\": \"line\",\n    //   \"source\": \"mapbox\",\n    //   \"source-layer\": \"road\",\n    //   \"filter\": [\n    //     \"all\", [\n    //       \"==\",\n    //       \"class\",\n    //       \"major_rail\"\n    //     ],\n    //     [\n    //       \"!in\",\n    //       \"structure\",\n    //       \"bridge\",\n    //       \"tunnel\"\n    //     ]\n    //   ],\n    //   \"paint\": {\n    //     \"line-color\": \"#bbb\",\n    //     \"line-width\": {\n    //       \"base\": 1.4,\n    //       \"stops\": [\n    //         [\n    //           14,\n    //           0.4\n    //         ],\n    //         [\n    //           15,\n    //           0.75\n    //         ],\n    //         [\n    //           20,\n    //           2\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"interactive\": true\n    // },\n    // {\n    //   \"id\": \"road_major_rail_hatching\",\n    //   \"paint\": {\n    //     \"line-color\": \"#bbb\",\n    //     \"line-dasharray\": [\n    //       0.2,\n    //       8\n    //     ],\n    //     \"line-width\": {\n    //       \"base\": 1.4,\n    //       \"stops\": [\n    //         [\n    //           14.5,\n    //           0\n    //         ],\n    //         [\n    //           15,\n    //           3\n    //         ],\n    //         [\n    //           20,\n    //           8\n    //         ]\n    //       ]\n    //     }\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1444849345966.4436\"\n    //   },\n    //   \"interactive\": true,\n    //   \"ref\": \"road_major_rail\"\n    // },\n\n\n\n\n\n\n\n\n\n\n\n\n\n    {\n      \"interactive\": true,\n      \"layout\": {\n        \"line-join\": \"round\"\n      },\n      \"metadata\": {\n        \"mapbox:group\": \"1444849307123.581\"\n      },\n      \"filter\": [\n        \"all\", [\n          \">=\",\n          \"admin_level\",\n          3\n        ],\n        [\n          \"==\",\n          \"maritime\",\n          0\n        ]\n      ],\n      \"type\": \"line\",\n      \"source\": \"mapbox\",\n      \"id\": \"admin_level_3\",\n      \"paint\": {\n        \"line-color\": \"#9e9cab\",\n        \"line-dasharray\": [\n          3,\n          1,\n          1,\n          1\n        ],\n        \"line-width\": {\n          \"base\": 1,\n          \"stops\": [\n            [\n              4,\n              0.4\n            ],\n            [\n              5,\n              1\n            ],\n            [\n              12,\n              3\n            ]\n          ]\n        }\n      },\n      \"source-layer\": \"admin\"\n    },\n    {\n      \"interactive\": true,\n      \"layout\": {\n        \"line-join\": \"round\",\n        \"line-cap\": \"round\"\n      },\n      \"metadata\": {\n        \"mapbox:group\": \"1444849307123.581\"\n      },\n      \"filter\": [\n        \"all\", [\n          \"==\",\n          \"admin_level\",\n          2\n        ],\n        [\n          \"==\",\n          \"disputed\",\n          0\n        ],\n        [\n          \"==\",\n          \"maritime\",\n          0\n        ]\n      ],\n      \"type\": \"line\",\n      \"source\": \"mapbox\",\n      \"id\": \"admin_level_2\",\n      \"paint\": {\n        \"line-color\": \"#9e9cab\",\n        \"line-width\": {\n          \"base\": 1,\n          \"stops\": [\n            [\n              4,\n              1.4\n            ],\n            [\n              5,\n              2\n            ],\n            [\n              12,\n              8\n            ]\n          ]\n        }\n      },\n      \"source-layer\": \"admin\"\n    },\n    {\n      \"interactive\": true,\n      \"layout\": {\n        \"line-cap\": \"round\"\n      },\n      \"metadata\": {\n        \"mapbox:group\": \"1444849307123.581\"\n      },\n      \"filter\": [\n        \"all\", [\n          \"==\",\n          \"admin_level\",\n          2\n        ],\n        [\n          \"==\",\n          \"disputed\",\n          1\n        ],\n        [\n          \"==\",\n          \"maritime\",\n          0\n        ]\n      ],\n      \"type\": \"line\",\n      \"source\": \"mapbox\",\n      \"id\": \"admin_level_2_disputed\",\n      \"paint\": {\n        \"line-color\": \"#9e9cab\",\n        \"line-dasharray\": [\n          2,\n          2\n        ],\n        \"line-width\": {\n          \"base\": 1,\n          \"stops\": [\n            [\n              4,\n              1.4\n            ],\n            [\n              5,\n              2\n            ],\n            [\n              12,\n              8\n            ]\n          ]\n        }\n      },\n      \"source-layer\": \"admin\"\n    },\n\n    // {\n    //   \"interactive\": true,\n    //   \"layout\": {\n    //     \"text-field\": \"{name_en}\",\n    //     \"text-font\": [\n    //       \"Open Sans Regular\",\n    //       \"Arial Unicode MS Regular\"\n    //     ],\n    //     \"text-size\": {\n    //       \"base\": 1,\n    //       \"stops\": [\n    //         [\n    //           13,\n    //           12\n    //         ],\n    //         [\n    //           14,\n    //           13\n    //         ]\n    //       ]\n    //     },\n    //     \"symbol-placement\": \"line\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1456163609504.0715\"\n    //   },\n    //   \"filter\": [\n    //     \"!=\",\n    //     \"class\",\n    //     \"ferry\"\n    //   ],\n    //   \"type\": \"symbol\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_label\",\n    //   \"paint\": {\n    //     \"text-color\": \"#765\",\n    //     \"text-halo-width\": 1,\n    //     \"text-halo-blur\": 0.5\n    //   },\n    //   \"source-layer\": \"road_label\"\n    // },\n    // {\n    //   \"interactive\": true,\n    //   \"minzoom\": 8,\n    //   \"layout\": {\n    //     \"text-field\": \"{ref}\",\n    //     \"text-font\": [\n    //       \"Open Sans Semibold\",\n    //       \"Arial Unicode MS Bold\"\n    //     ],\n    //     \"text-size\": 11,\n    //     \"icon-image\": \"motorway_{reflen}\",\n    //     \"symbol-placement\": {\n    //       \"base\": 1,\n    //       \"stops\": [\n    //         [\n    //           10,\n    //           \"point\"\n    //         ],\n    //         [\n    //           11,\n    //           \"line\"\n    //         ]\n    //       ]\n    //     },\n    //     \"symbol-spacing\": 500,\n    //     \"text-rotation-alignment\": \"viewport\",\n    //     \"icon-rotation-alignment\": \"viewport\"\n    //   },\n    //   \"metadata\": {\n    //     \"mapbox:group\": \"1456163609504.0715\"\n    //   },\n    //   \"filter\": [\n    //     \"<=\",\n    //     \"reflen\",\n    //     6\n    //   ],\n    //   \"type\": \"symbol\",\n    //   \"source\": \"mapbox\",\n    //   \"id\": \"road_label_highway_shield\",\n    //   \"paint\": {\n\n    //   },\n    //   \"source-layer\": \"road_label\"\n    // },\n    //   {\n    //     \"interactive\": true,\n    //     \"layout\": {\n    //       \"text-font\": [\n    //         \"Open Sans Bold\",\n    //         \"Arial Unicode MS Bold\"\n    //       ],\n    //       \"text-transform\": \"uppercase\",\n    //       \"text-letter-spacing\": 0.1,\n    //       \"text-field\": \"{name_en}\",\n    //       \"text-max-width\": 9,\n    //       \"text-size\": {\n    //         \"base\": 1.2,\n    //         \"stops\": [\n    //           [\n    //             12,\n    //             10\n    //           ],\n    //           [\n    //             15,\n    //             14\n    //           ]\n    //         ]\n    //       }\n    //     },\n    //     \"metadata\": {\n    //       \"mapbox:group\": \"1444849272561.29\"\n    //     },\n    //     \"filter\": [\n    //       \"in\",\n    //       \"type\",\n    //       \"hamlet\",\n    //       \"suburb\",\n    //       \"neighbourhood\",\n    //       \"island\",\n    //       \"islet\"\n    //     ],\n    //     \"type\": \"symbol\",\n    //     \"source\": \"mapbox\",\n    //     \"id\": \"place_label_other\",\n    //     \"paint\": {\n    //       \"text-color\": \"#633\",\n    //       \"text-halo-color\": \"rgba(255,255,255,0.8)\",\n    //       \"text-halo-width\": 1.2\n    //     },\n    //     \"source-layer\": \"place_label\"\n    //   },\n    //   {\n    //     \"interactive\": true,\n    //     \"layout\": {\n    //       \"text-font\": [\n    //         \"Open Sans Regular\",\n    //         \"Arial Unicode MS Regular\"\n    //       ],\n    //       \"text-field\": \"{name_en}\",\n    //       \"text-max-width\": 8,\n    //       \"text-size\": {\n    //         \"base\": 1.2,\n    //         \"stops\": [\n    //           [\n    //             10,\n    //             12\n    //           ],\n    //           [\n    //             15,\n    //             22\n    //           ]\n    //         ]\n    //       }\n    //     },\n    //     \"metadata\": {\n    //       \"mapbox:group\": \"1444849272561.29\"\n    //     },\n    //     \"filter\": [\n    //       \"==\",\n    //       \"type\",\n    //       \"village\"\n    //     ],\n    //     \"type\": \"symbol\",\n    //     \"source\": \"mapbox\",\n    //     \"id\": \"place_label_village\",\n    //     \"paint\": {\n    //       \"text-color\": \"#333\",\n    //       \"text-halo-color\": \"rgba(255,255,255,0.8)\",\n    //       \"text-halo-width\": 1.2\n    //     },\n    //     \"source-layer\": \"place_label\"\n    //   },\n    //   {\n    //     \"interactive\": true,\n    //     \"layout\": {\n    //       \"text-font\": [\n    //         \"Open Sans Regular\",\n    //         \"Arial Unicode MS Regular\"\n    //       ],\n    //       \"text-field\": \"{name_en}\",\n    //       \"text-max-width\": 8,\n    //       \"text-size\": {\n    //         \"base\": 1.2,\n    //         \"stops\": [\n    //           [\n    //             10,\n    //             14\n    //           ],\n    //           [\n    //             15,\n    //             24\n    //           ]\n    //         ]\n    //       }\n    //     },\n    //     \"metadata\": {\n    //       \"mapbox:group\": \"1444849272561.29\"\n    //     },\n    //     \"filter\": [\n    //       \"==\",\n    //       \"type\",\n    //       \"town\"\n    //     ],\n    //     \"type\": \"symbol\",\n    //     \"source\": \"mapbox\",\n    //     \"id\": \"place_label_town\",\n    //     \"paint\": {\n    //       \"text-color\": \"#333\",\n    //       \"text-halo-color\": \"rgba(255,255,255,0.8)\",\n    //       \"text-halo-width\": 1.2\n    //     },\n    //     \"source-layer\": \"place_label\"\n    //   },\n    //   {\n    //     \"interactive\": true,\n    //     \"layout\": {\n    //       \"text-font\": [\n    //         \"Open Sans Semibold\",\n    //         \"Arial Unicode MS Bold\"\n    //       ],\n    //       \"text-field\": \"{name_en}\",\n    //       \"text-max-width\": 8,\n    //       \"text-size\": {\n    //         \"base\": 1.2,\n    //         \"stops\": [\n    //           [\n    //             7,\n    //             14\n    //           ],\n    //           [\n    //             11,\n    //             24\n    //           ]\n    //         ]\n    //       }\n    //     },\n    //     \"metadata\": {\n    //       \"mapbox:group\": \"1444849272561.29\"\n    //     },\n    //     \"filter\": [\n    //       \"==\",\n    //       \"type\",\n    //       \"city\"\n    //     ],\n    //     \"type\": \"symbol\",\n    //     \"source\": \"mapbox\",\n    //     \"id\": \"place_label_city\",\n    //     \"paint\": {\n    //       \"text-color\": \"#333\",\n    //       \"text-halo-color\": \"rgba(255,255,255,0.8)\",\n    //       \"text-halo-width\": 1.2\n    //     },\n    //     \"source-layer\": \"place_label\"\n    //   }\n\n  ],\n  \"created\": 0,\n  \"modified\": 0,\n  \"owner\": \"mapbox\",\n  \"id\": \"bright-v9\",\n  \"draft\": false,\n  \"visibility\": \"public\"\n};\n","//\n\nimport { configuration } from '../Config/configuration.js';\nimport { datasetToYear } from '../Service/utility.js';\nimport { key } from '../Component/mapbox_api_key.js';\n\n\nexport function calcTileCache(pole, current_zoom, current_bounds, source_geography, source_dataset, tiles_already_requested) {\n\n\n  const pole_lat = pole.lat;\n  const pole_lng = pole.lng;\n\n  const current_sw = current_bounds._sw;\n  const current_ne = current_bounds._ne;\n  const lat_span = Math.abs(current_sw.lat - current_ne.lat);\n  const lng_span = Math.abs(current_sw.lng - current_ne.lng);\n  const pct_along_lat = (pole_lat - current_sw.lat) / lat_span;\n  const pct_along_lng = (pole_lng - current_sw.lng) / lng_span;\n\n  const bounds_obj = {};\n\n  [3, 4, 5, 6, 7, 8, 9].forEach(new_zoom => {\n    const zoom_difference = current_zoom - new_zoom;\n\n    const new_lat_span = lat_span * Math.pow(2, zoom_difference);\n    const new_lng_span = lng_span * Math.pow(2, zoom_difference);\n    const new_sw_lat = pole_lat - (pct_along_lat * new_lat_span);\n    const new_ne_lat = pole_lat + ((1 - pct_along_lat) * new_lat_span);\n    let new_sw_lng = pole_lng - (pct_along_lng * new_lng_span);\n    let new_ne_lng = pole_lng + ((1 - pct_along_lng) * new_lng_span);\n\n    // doesn't appear to be any issues with latitude out of bounds\n    // lng out of bounds below\n    if (new_sw_lng < -180) {\n      console.log({ msg: 'wrapping new_sw_lng' });\n      new_sw_lng = new_sw_lng + 360;\n    }\n    if (new_sw_lng > 180) {\n      console.log({ msg: 'wrapping new_sw_lng (RARE!)' });\n      new_sw_lng = new_sw_lng - 360; // rare to impossible\n    }\n\n    if (new_ne_lng < -180) {\n      console.log({ msg: 'wrapping new_ne_lng (RARE!)' });\n      new_ne_lng = new_ne_lng + 360; // rare to impossible\n    }\n    if (new_ne_lng > 180) {\n      console.log({ msg: 'wrapping new_ne_lng' });\n      new_ne_lng = new_ne_lng - 360;\n    }\n\n\n    bounds_obj[new_zoom] = [\n      [new_sw_lng, new_sw_lat],\n      [new_ne_lng, new_ne_lat]\n    ];\n\n  });\n\n  const tiles_to_get = [];\n\n  Object.keys(bounds_obj).forEach(zoom => {\n    const sw_lat = bounds_obj[zoom][0][1];\n    const sw_lng = bounds_obj[zoom][0][0];\n    const ne_lat = bounds_obj[zoom][1][1];\n    const ne_lng = bounds_obj[zoom][1][0];\n\n    let lat_tile_1 = lat2tile(sw_lat, zoom);\n    let lat_tile_2 = lat2tile(ne_lat, zoom);\n\n    if (lat_tile_1 > lat_tile_2) {\n      let temp = lat_tile_1;\n      lat_tile_1 = lat_tile_2;\n      lat_tile_2 = temp;\n    }\n\n    let long_tile_1 = long2tile(sw_lng, zoom);\n    let long_tile_2 = long2tile(ne_lng, zoom);\n\n    if (long_tile_1 > long_tile_2) {\n      let temp = long_tile_1;\n      long_tile_1 = long_tile_2;\n      long_tile_2 = temp;\n    }\n\n    for (let i = lat_tile_1; i <= lat_tile_2; i++) {\n      for (let j = long_tile_1; j < long_tile_2; j++) {\n        tiles_to_get.push(`https://${configuration.tiles[0]}/${source_geography}_${datasetToYear(source_dataset)}/${zoom}/${j}/${i}.pbf`);\n        // optimistic mapbox tile fetching turned off\n        // tiles_to_get.push(`https://a.tiles.mapbox.com/v4/mapbox.mapbox-terrain-v2,mapbox.mapbox-streets-v7/${zoom}/${j}/${i}.vector.pbf?access_token=${key.key}`);\n        tiles_to_get.push(`https://a.tiles.mapbox.com/v4/mapbox.mapbox-streets-v7/${zoom}/${j}/${i}.vector.pbf?access_token=${key}`);\n      }\n    }\n\n  });\n\n\n  return tiles_to_get.filter(tile_url => {\n    return !tiles_already_requested.includes(tile_url);\n  });\n\n}\n\n\n\nfunction long2tile(lon, zoom) {\n  return (Math.floor((lon + 180) / 360 * Math.pow(2, zoom)));\n}\n\nfunction lat2tile(lat, zoom) {\n  return (Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom)));\n}\n","//\n\nimport { throttle } from 'lodash';\nimport { getLabel } from '../Service/utility.js';\nimport { calcTileCache } from '../Service/calc_tile_precache.js';\nimport cache_worker from '../Worker/cache_worker';\n\nconst myCacheWorker = new Worker(cache_worker);\n\n//\n\nexport function loadMouseEvents(getCurrentData,\n  addToRequested, updateClusters, updateMouseover, updateZoomMessage) {\n  //\n\n  const findNew = (e, center) => {\n\n    updateZoomMessage(window.map.getZoom());\n\n    const screenX = e ? e.originalEvent.x : false;\n    const screenY = e ? e.originalEvent.y : false;\n\n    const pole = e ? window.map.unproject([screenX, screenY]) : window.map.getCenter();\n\n    const current_zoom = window.map.getZoom();\n    const current_bounds = window.map.getBounds();\n\n    const { source_geography, source_dataset, tiles_already_requested } = getCurrentData();\n\n    const filtered_tiles_to_get = calcTileCache(pole, current_zoom, current_bounds, source_geography, source_dataset, tiles_already_requested);\n\n    if (filtered_tiles_to_get.length) {\n      myCacheWorker.postMessage(filtered_tiles_to_get);\n      addToRequested(filtered_tiles_to_get);\n    }\n\n    updateClusters(pole, current_zoom, current_bounds);\n  };\n\n  // get initial map data (trigger initial map render)\n  findNew();\n\n  // custom event to manually trigger redraw on geo/dataset/theme change\n  window.map.on('redraw', () => {\n    findNew();\n  });\n\n  window.map.on('moveend', (e => {\n    if (e.originalEvent) {\n      findNew(e);\n    }\n  }));\n\n  window.map.on('zoomstart', throttle((e) => {\n    if (e.originalEvent) {\n      findNew(e);\n    }\n  }, 500));\n\n  //\n\n\n  window.map.on('mousemove', 'tiles-polygons', throttle((e) => {\n\n    if(!(e.features && e.features[0])){\n      return;\n    }\n\n    window.map.getCanvas().style.cursor = 'pointer';\n    const geoid = e.features[0].properties.GEOID;\n    const name = e.features[0].properties.NAME;\n    const label = getLabel(geoid, name);\n\n    if (geoid && label) {\n      updateMouseover(geoid, label);\n    }\n\n  }, 132));\n\n\n  //\n}\n","\nimport React, { Component } from 'react';\nimport '../../node_modules/mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl from 'mapbox-gl';\nimport { key } from './mapbox_api_key.js';\nimport { style } from '../Config/style.js';\nimport { configuration } from '../Config/configuration.js';\n\nimport { loadMapLayers } from '../Service/load_map_layers.js';\nimport { loadMouseEvents } from '../Service/load_mouse_events.js';\n\n\n\nclass Map extends Component {\n\n\n  getCurrentData = ()=> {\n    return {\n      source_geography: this.props.source_geography,\n      source_dataset: this.props.source_dataset,\n      tiles_already_requested: this.props.tiles_already_requested\n    };\n  }\n\n  componentDidMount() {\n\n    mapboxgl.accessToken = key;\n    window.map = new mapboxgl.Map({\n      container: 'map',\n      style,\n      center: [-104.9, 39.75],\n      zoom: configuration.startup.zoom,\n      maxZoom: 13,\n      minZoom: 3\n    });\n\n    window.map.on('load', () => {\n\n      loadMapLayers(this.props.source_geography, this.props.source_dataset);\n\n      loadMouseEvents(this.getCurrentData, this.props.addToRequested, this.props.updateClusters, this.props.updateMouseover, this.props.updateZoomMessage);\n\n      window.map.on('error', event => console.log(event));\n\n    });\n\n  }\n\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    // redraw layer on theme / geo / dataset change\n    if (this.props.source_geography !== nextProps.source_geography || this.props.source_dataset !== nextProps.source_dataset || this.props.selected_attr !== nextProps.selected_attr) {\n      // geography or year changed.  update source and redraw\n      this.props.clearActiveLayers();\n    }\n\n    // update mouseover text\n    if (this.props.mouseover_statistic !== nextProps.mouseover_statistic || this.props.mouseover_label !== nextProps.mouseover_label || this.props.mouseover_moe !== nextProps.mouseover_moe) {\n\n      // TODO populate something with mouseover info\n\n            // \"title\": `${nextProps.mouseover_label}\\n${formatNumber(nextProps.mouseover_statistic, nextProps.source_dataset, nextProps.selected_attr)}  ± ${formatNumber(nextProps.mouseover_moe, nextProps.source_dataset, nextProps.selected_attr)}`\n\n\n    }\n\n    return false;\n  }\n\n  render() {\n    return <div id=\"map\" />;\n  }\n}\n\n\nexport default Map;\n","//\n\nimport { configuration } from '../Config/configuration.js';\nimport { datasetToYear } from '../Service/utility.js';\n\n\nexport function loadMapLayers(source_geography, source_dataset) {\n\n  window.map.addSource('point', {\n    \"type\": \"geojson\",\n    \"data\": {\n      \"type\": \"Point\",\n      \"coordinates\": [0, 0]\n    }\n  });\n\n  window.map.addLayer({\n    \"id\": \"point\",\n    \"source\": \"point\",\n    \"type\": \"circle\",\n    \"paint\": {\n      \"circle-radius\": 4,\n      \"circle-color\": \"red\"\n    }\n  });\n\n\n  window.map.addSource('tiles', {\n    \"type\": \"vector\",\n    \"minzoom\": 3,\n    \"maxzoom\": 9,\n    \"tiles\": [`https://${configuration.tiles[0]}/${source_geography}_${datasetToYear(source_dataset)}/{z}/{x}/{y}.pbf`,\n      `https://${configuration.tiles[1]}/${source_geography}_${datasetToYear(source_dataset)}/{z}/{x}/{y}.pbf`,\n      `https://${configuration.tiles[2]}/${source_geography}_${datasetToYear(source_dataset)}/{z}/{x}/{y}.pbf`\n    ]\n  });\n\n  window.map.addSource('county-boundary', {\n    \"type\": \"vector\",\n    \"minzoom\": 3,\n    \"maxzoom\": 9,\n    \"tiles\": [`https://${configuration.tiles[0]}/county_2016/{z}/{x}/{y}.pbf`,\n      `https://${configuration.tiles[1]}/county_2016/{z}/{x}/{y}.pbf`,\n      `https://${configuration.tiles[2]}/county_2016/{z}/{x}/{y}.pbf`\n    ]\n  });\n\n  window.map.addLayer({\n    'id': 'tiles-polygons',\n    'type': 'fill',\n    'source': 'tiles',\n    'source-layer': 'main',\n  }, \"background\");\n\n  window.map.addLayer({\n    'id': 'counties',\n    'type': 'line',\n    'source': 'county-boundary',\n    'source-layer': 'main',\n    'paint': {\n      'line-color': 'black',\n      'line-width': 1,\n      'line-opacity': 0.5,\n      'line-dasharray': [1, 1]\n    }\n  }, \"admin_level_3\");\n\n\n  // TODO directly change style object\n  // Add a filter for only US Geo\n  window.map.setPaintProperty('admin_level_3', 'line-color', 'black');\n  window.map.setPaintProperty('admin_level_3', 'line-width', 1);\n\n  window.map.setPaintProperty('admin_level_2', 'line-color', 'black');\n  window.map.setPaintProperty('admin_level_2', 'line-width', 2);\n\n}\n","// this is a container component\n\nimport { connect } from 'react-redux';\nimport Map from './Map';\n\nimport {\n  thunkUpdateClusters,\n  thunkChangeMouseover,\n  thunkRemoveLayers,\n}\nfrom '../Redux/thunks.js';\n\nimport { addToTilesAlreadyRequested, actionUpdateZoomMessage } from '../Redux/actions.js';\n\nconst mapStateToProps = state => {\n  return {\n    source_geography: state.map.source_geography,\n    source_dataset: state.map.source_dataset,\n    tiles_already_requested: state.map.tiles_already_requested,\n    active_layer_names: state.map.active_layer_names,\n    selected_attr: state.map.selected_attr,\n    mouseover_statistic: state.map.mouseover_statistic,\n    mouseover_label: state.map.mouseover_label,\n    mouseover_moe: state.map.mouseover_moe\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateClusters: (pole, current_zoom, current_bounds) => {\n      dispatch(thunkUpdateClusters(pole, current_zoom, current_bounds));\n    },\n    updateMouseover: (geoid, name) => {\n      dispatch(thunkChangeMouseover(geoid, name));\n    },\n    addToRequested: (urls) => {\n      dispatch(addToTilesAlreadyRequested(urls));\n    },\n    clearActiveLayers: () => {\n      dispatch(thunkRemoveLayers());\n    },\n    updateZoomMessage: zoom => {\n      dispatch(actionUpdateZoomMessage(zoom));\n    }\n  };\n};\n\nconst MapContainer = connect(mapStateToProps, mapDispatchToProps)(Map);\n\nexport default MapContainer;\n","import React from 'react';\n\nconst style = {\n  position: 'absolute',\n  bottom: '5px',\n  left: '120px',\n  color: 'maroon',\n  padding: '5px',\n  width: 'auto',\n  height: 'auto',\n  fontSize: '11px'\n};\n\nconst ZoomMessage = ({\n  map_zoom,\n  source_geography\n}) => {\n\n  const display_message = ((source_geography === 'tract' || source_geography === 'bg' || source_geography === 'place') && map_zoom < 9);\n\n  return display_message ?\n    <div style={style}>Zoom in to see full detail</div> :\n    <span />;\n\n};\n\nexport default ZoomMessage;\n","// this is a container component\n\nimport { connect } from 'react-redux';\nimport ZoomMessage from './ZoomMessage.js';\n\nconst mapStateToProps = state => {\n  return {\n    map_zoom: state.map.map_zoom,\n    source_geography: state.map.source_geography\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nconst ZoomMessageContainer = connect(mapStateToProps, mapDispatchToProps)(ZoomMessage);\n\nexport default ZoomMessageContainer;\n","import React from 'react';\nimport { formatNumber } from '../Service/utility.js';\n\nconst Info = ({ mouseover_statistic,\n                mouseover_label,\n                mouseover_moe, source_dataset, selected_attr}) => {\n\n  return (\n    <div style={{position: 'absolute', top: '80px', right: '50px', zIndex: '1000', width: '200px', borderRadius: '0', backgroundColor: 'white', padding: '10px'}}>\n      <p style={{marginBottom: '5px'}}>{mouseover_label}</p>\n  <p>{`${formatNumber(mouseover_statistic, source_dataset, selected_attr)}  ± ${formatNumber(mouseover_moe, source_dataset, selected_attr)}`}</p>\n\n    </div>\n  );\n};\n\nexport default Info;\n","// this is a container component\n\nimport { connect } from 'react-redux';\nimport Info from './Info.js';\n\nconst mapStateToProps = state => {\n  return {\n    mouseover_statistic: state.map.mouseover_statistic,\n    mouseover_label: state.map.mouseover_label,\n    mouseover_moe: state.map.mouseover_moe,\n    source_dataset: state.map.source_dataset,\n    selected_attr: state.map.selected_attr,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\n  };\n};\n\nconst InfoContainer = connect(mapStateToProps, mapDispatchToProps)(Info);\n\nexport default InfoContainer;\n","// reducer\n\nimport { configuration } from '../Config/configuration.js';\n\n\nconst default_state = {\n  pole_list: [],\n  map_zoom: configuration.startup.zoom,\n  active_layer_names: [],\n  busy_data: false,\n  busy_moe: false,\n  cluster_done_list: [],\n  moe_cluster_done_list: [],\n  source_geography: configuration.startup.source_geography,\n  source_dataset: configuration.startup.source_dataset,\n  selected_attr: configuration.startup.selected_attr,\n  mouseover_statistic: undefined,\n  mouseover_label: undefined,\n  mouseover_moe: undefined,\n  tiles_already_requested: []\n};\n\nconst map = (\n  state = default_state,\n  action\n) => {\n  switch (action.type) {\n    case 'UPDATE_ZOOM_MESSAGE':\n      return Object.assign({}, state, { map_zoom: action.zoom });\n    case 'UPDATE_MOUSEOVER_STATISTIC':\n      return Object.assign({}, state, { mouseover_statistic: action.data });\n    case 'UPDATE_MOUSEOVER_INFO':\n      return Object.assign({}, state, { mouseover_label: action.data });\n    case 'UPDATE_MOUSEOVER_MOE':\n      return Object.assign({}, state, { mouseover_moe: action.data });\n    case 'ADD_TO_REQUESTED_TILES_LIST':\n      return Object.assign({}, state, { tiles_already_requested: [...state.tiles_already_requested, ...action.urls] });\n    case 'BUSY_DATA':\n      return Object.assign({}, state, { busy_data: true, pole_list: [...state.pole_list, action.pole] });\n    case 'BUSY_MOE':\n      return Object.assign({}, state, { busy_moe: true });\n    case 'UNBUSY_DATA':\n      return Object.assign({}, state, { busy_data: false });\n    case 'UNBUSY_MOE':\n      return Object.assign({}, state, { busy_moe: false });\n    case 'UPDATE_POLYGON_STYLE':\n      return Object.assign({}, state, {\n        cluster_done_list: Array.from(new Set([...state.cluster_done_list, ...action.clusters])),\n        busy_data: false,\n        active_layer_names: [...state.active_layer_names, action.layer_name]\n      });\n    case 'UPDATE_MOE_DATA':\n      return Object.assign({}, state, {\n        moe_cluster_done_list: Array.from(new Set([...state.moe_cluster_done_list, ...action.clusters])),\n        busy_moe: false\n      });\n    case 'UPDATE_DATASET':\n      console.log('updating dataset');\n      return Object.assign({}, state, {\n        source_dataset: action.dataset,\n        mouseover_statistic: undefined,\n        mouseover_moe: undefined,\n        mouseover_label: undefined,\n        cluster_done_list: [],\n        moe_cluster_done_list: [],\n        pole_list: []\n      });\n    case 'UPDATE_GEOGRAPHY':\n      return Object.assign({}, state, {\n        source_geography: action.geography,\n        mouseover_statistic: undefined,\n        mouseover_moe: undefined,\n        mouseover_label: undefined,\n        cluster_done_list: [],\n        moe_cluster_done_list: [],\n        pole_list: []\n      });\n    case 'UPDATE_THEME':\n      console.log('updating theme');\n      return Object.assign({}, state, {\n        selected_attr: action.theme,\n        mouseover_statistic: undefined,\n        mouseover_moe: undefined,\n        mouseover_label: undefined,\n        cluster_done_list: [],\n        moe_cluster_done_list: [],\n        pole_list: []\n      });\n    case 'CLEAR_ACTIVE_LAYER_NAMES':\n      return Object.assign({}, state, {\n        active_layer_names: []\n      });\n    default:\n      return state;\n  }\n};\n\nexport default map;\n","import { combineReducers } from 'redux';\nimport map from './reducer.js';\n\nconst Store = combineReducers({\n  map\n});\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport MainMenuContainer from './Component/MainMenuContainer.js';\nimport MapContainer from './Component/MapContainer.js';\nimport ZoomMessageContainer from './Component/ZoomMessageContainer.js';\nimport InfoContainer from './Component/InfoContainer.js';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Store from './Redux/combine_reducers';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\n\nexport const store = createStore(\n  Store,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n      <React.Fragment>\n      <MapContainer />\n            <InfoContainer />\n      <MainMenuContainer />\n      <ZoomMessageContainer />\n      </React.Fragment>\n  </Provider>,\n  document.getElementById('root')\n);\n","/* eslint-env worker */\n/* eslint no-restricted-globals: \"off\" */\n/* global */\n\n// worker.js\nconst workercode = () => {\n\n  let persistent_data = {};\n\n  self.onmessage = function(e) {\n\n    // determine what kind of message (fetch data or lookup or clear)\n    if (e.data.type === 'fetch') {\n      // get data from aws/serverless\n\n      fetch(e.data.url)\n        .then(res => {\n          return res.json();\n        })\n        .then(fetched_data => {\n\n          if (Object.keys(fetched_data.data).length) {\n            // TODO send pre-computed stops and geoids\n            self.postMessage({ type: 'fetch', data: fetched_data, attr: e.data.attr, sumlev: e.data.sumlev, source_dataset: e.data.source_dataset });\n            persistent_data = Object.assign({}, persistent_data, fetched_data.data);\n          }\n          else {\n            self.postMessage(false);\n          }\n\n        })\n        .catch(err => {\n          console.error('err:', err);\n        });\n    }\n    else if (e.data.type === 'lookup') {\n      // query giant data object for est or moe\n      self.postMessage({ type: 'lookup', data: persistent_data[e.data.data] });\n    }\n    else if (e.data.type === 'clear') {\n      // clear data (for when changing geog / theme / dataset)\n      persistent_data = {};\n    }\n  };\n};\n\nlet code = workercode.toString();\ncode = code.substring(code.indexOf(\"{\") + 1, code.lastIndexOf(\"}\"));\n\nconst blob = new Blob([code], { type: \"application/javascript\" });\nconst worker_script = URL.createObjectURL(blob);\n\nmodule.exports = worker_script;\n"],"sourceRoot":""}